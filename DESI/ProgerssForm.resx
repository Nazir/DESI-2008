<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList_Status.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList_Status.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABw
        GQAAAk1TRnQBSQFMAgEBBgEAAQkBAAEEAQABEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEYBgABGC0AAcsBDgECAcgBKgELAcgBKgELAcsBDwECHgAB4gF+AYUByQG8AekBtQGo
        AegB1wHKAeoB7AGhAaOEAAHHAQ4BAgHFAU0BHAHcAX8BSQHdAYIBSwHFAU8BHgHHARABAgwAAfABvgHB
        AdEBtwHbAcUBqwLaAcAB3AHYAUsBUwHLAW4BjAKzAfgCpAH3AsIB+QHnAaUBrYEAAb4BGQEHAbABVAEd
        AZgBOgEVAcEBcwFVAccBewFfAZoBPAEYAagBTQEXAbwBGgEHCQAB8wHZAdwCzwH6AsQB+QLQAfoB1AFQ
        AV4BuwFeAYsCpQH3AqUB9wG6AXkBqwHXAR8BIH4AAcgBBgECAZ8BSQEcAW0BHQEAAXYBGQEAAdoBwQG3
        AecB2AHSAXoBHQEAAW4BHAEAAZIBPwEUAccBBwECBgAB2wE2ATcB0AGyAdcCxgH5AskB+QHgAb8B1AHE
        Aa0B3gKiAfcCugH5AeABzAHjAeEBrAG9AbcBggG6AZIBXQG3AZ8BVgGgdQABsgEdAQ0BXwEmAQoBUAEV
        AQABXwESAQAB0wG8AbMB4wHTAc0BZAEXAQABVQEWAQABUwEeAQUBqQEaAQsDAAHqAZ8BowHWARUBFgHo
        AcABzQLQAfoCxgH5AtgB+wK/AfkCrAH4AssB+gLUAfsCqQH3AooB9QJ7AfQBiQGBAeoB3QGSAaFyAAGe
        AR8BDgFUASABCAFrASUBCAF/ASkBBwHwAecB4wHsAd4B2AGJATEBDQF+AS8BDQFpAScBCQGZASABDgHc
        AY0BnQHYAdMB9AHTAY0BqAHxAeIB6gLmAfsCzQH6AssB+QK2AfgCuQH5Ar8B+QKbAfYCgQH0AnwB9AKF
        AfUCowH3Ae4B4QHrYAABugIZAaQCmgGjApgBowKYAaMCmAGiApkBvAF6AV8BpgFGARoBqgFOAScBrAFP
        AScBsAFWATABsAFXATABrQFQASkBrAFRASoBrwFTAScBqgEjARMC0QH6AsUB+QLJAfkC2QH6AuUB+wLc
        AfsCzQH6ArQB+AKlAfcClQH2AokB9QKaAfYCrQH3Ab8BqQHfAcUBTwFtAeIBZgFoYAABpgJXAb4CvQH7
        AvoB/QL8Af0C+wP/AeIBxAG2AdEBdQFJAdQBeQFTAdgBeQFSAfoB7AHnAfkB2QHLAdkBfAFVAdgBfAFW
        AdoBggFXAbMBDAEKAtkB+wLKAfoCxQH5AsYB+QLQAfoC1QH7As8B+gK9AfkCmQH3AngB9AJ1AfMChwH1
        ApYB9gGjAY8B3wGmAT0BegHJAVkBdWAAAacBVAFTAfQC8wG2ArUBugG5AbgB8AHvAe4B8ALvAeoB6QHq
        Ad8BogGEAf8BqAGCAf4BqAGEAf8B2wHLAfgB8wHxAf4BqgGHAf8BtgGQAcQBUAE8Ac8CAAHiAYUBjgHS
        AXUBjQHZAc0B7ALYAfoC1wH6As0B+gLLAfoCoQH2AngB9AJ9AfQCiAH1AnQB8wJeAfECXAHxAmwB8wGW
        AYkB5mAAAagCVAH5AvcB6wLqAecC5QG4ArcB6QLnAeEC4gGwAq4B1QGkAY8B9AG8AaIB/QHGAa4B/QHG
        Aa4B9gHCAakBvQFnAVYBxwEAAQEGAAHdAVQBWQHrAdoB5wLlAfsC4AH7AtEB+gLGAfkCagHzAjwB7wJx
        AfMCpwH3ArEB9wKNAfUCZwHyAl0B8QF7AW4B5GAAAakCVgH8AvsB7gLtAfAC7wHpAegB5wOyA7YD5wOz
        Ac0BvAG3Ad0BwQG3AdoBvwG0AesB2AHTAaYBTwFQBgAB3AFLAU8B4AHXAe8C1QH6AswB+gLGAfkCzQH6
        ArIB+AJOAfECOAHvAlEB8QJoAfICxgH5Ad0BzAHmAZgBYgG2AYoBggHqAbQBaQGfYAABqgJWAf8C/gHz
        AvIB5QLkAbYCtQHpAugB6wHqAekB6gLoAewC6gO0Ae0B7wHwAfQB9gH3A/8BqwJYBgAC8gH8AscB+QLE
        AfkCxwH5As8B+gLeAfsCgwH0AigB7gJXAfICcQHzAj8B7wJ8AfQB2AGjAbsB1QEgASMB3gGVAaRjAAGs
        AlgD/gOzAbkCuAHxAu8B8ALuAe8C7gHvAu4B7wLuAfEC7wO1Ab4CvQP9AawCWQYAAfEByQHNAc4BzAH2
        AswB+gHPAa8B1AHoAcABzQG+AbIB6QJIAfACDgHsAXMBXwHbAZIBfAHaAjkB7gJIAfABjgFjAcEB1gEj
        ASZmAAGpAVoBWQOzAfcC9gH8AfoB+wH6AvkB+gL5AfoC+QH6AvkB+gL5AfoC+QH7AvoB+QL4AbkCuAGp
        AloJAAHrAcUBzwHsAdIB3AHXAScBKQHRARIBFwFeASQBrQIZAe0CFAHsAXUBDAF2AaABKgFpAlAB8AI0
        Ae4CYQHyAeIBugHNZgABowI0Ae8C6AHwAukB8ALpAfAC6QHwAukB8ALpAfAC6QHwAukB8ALpAfAC6QHw
        AukB7QLiAaMCNRIAAckBlAG7AkwB8AIRAewCPgHvAZoBMQF5AbMBPQFrAm0B8wI8Ae8BZAFhAe0B2AGm
        Ab9mAAG5AgUBrAIQAasCDwGrAg8BqwIPAasCDwGrAg8BqwIPAasCDwGrAg8BqwIPAasCDwGsAhABuQIG
        EgAB6QG0Ab0CkwH1AjwB7wJ9AfQBywFiAX0B4gFsAW8C0wH6Aq0B+AHYAaMBu3UAAdIBAQEAAcgBFwEE
        AcYBMgENAcsBSwEbAcwBSwEcAcYBMwENAcgBFwEEAdEBAg0AAZYBCwEZAV0BGgE5ATcBHgFNAT4BHgFM
        AUABIAFNAUMBIAFMAUcBIgFLAUoBJAFKAUsBIwFJAUgBIgFIAUUBHwFGAT8BIAFOATQBLAFrAS0BMAF1
        AVMBHwFDAY8BCQEVDwABswEAAQ0BhAECASgBbwEGAT8BbQEGAT8BhAECASgBsgEAAQ1IAAHIARIBBQHC
        AUYBFgHQAXMBNgHgAYwBWwHwAZwBcwHyAZ8BdgHkAZABYAHPAXUBOgHAAUYBFQHJARUBBQkAAW0BIwFE
        ASUBSgGNAQABfwH/AToBuAH/AToBuAH/AVUBxwH/AWYB0gH/AWYB0gH/AWYB0gH/AWYB0gH/AVUBxwH/
        AToBuAH/AToBuAH/AQABfwH/AScBUAGNAW8BGwEyCQABtQEAAQwBUAEFAVQBGwEPAb4BKwEmAe4BRgFB
        AfwBRAE/AfwBLgEpAe8BHQEQAcMBTQEEAVcBtAEAAQ0bAAHRAQUBAiEAAcUBGgEJAcoBZAEnAa0BSQEZ
        AZEBNAERAacBTQEpAb0BXwE6AcABYwE+Aa4BUwEwAZYBOgEXAaMBQgEUAcEBXgEhAcEBGgEIBgABfwEb
        AT0BJQFKAZwBAAF/Af8BAQGKAf8BFAGhAf8BMgG0Af8BVQHHAf8BYAHNAf8BZgHSAf8BXQHNAf8BOgG4
        Af8BGQGiAf8BBQGTAf8BBQGUAf8BNQE+AXoBjQEOAR8GAAGiAQABFgEiAQkBkwELAQYB4gIAAeUBCgEF
        AfYBFwESAf8BGQEUAf8BDQEIAfkCAAHpAQkBAwHgARwBBQGUAZ4BAAEYFQABPQFHAQoBQgFnARwB0QEJ
        AQYbAAHEAQwBBAHCAV0BJgGRATcBDgF1ARwBAAF6ARwBAAGTAUEBJwHXAbEBnwHeAbwBqwGeAVIBNgF6
        ARwBAAF3AR4BAAGHAS0BCgG3AVYBIQHDAQ4BBAMAAccBAgEHAX0BFQE1AQ0BeQHfAQEBgAH/AQQBhwH/
        ARgBmAH/ASIBogH/AaEB2QH/AZ0B1wH/ASEBogH/ARwBmwH/AQoBjgH/AQkBlQH/AQcBcwHXAYgBCQEc
        AcwBAQECAwABtwEAAQ0BHgEIAY4BBwEDAdEBBgECAb4BQwFAAdABAgEAAdABAgEAAdsBAgEAAd0BAQEA
        AdMBQwFBAdMBCAEEAb8BBAEAAcwBGAEFAY8BtQEAAQ4PAAE7AUEBBQFRAcYBVQF3Ae4BgQE5AWQBHQHP
        AQgBBBUAAdABAQEAAbgBOQEZAZABQAEXAV0BFQEAAXQBIgEAAXYBGQEAAZIBQAEtAfkB9AHxAv8B/gGd
        AVMBPAF2ARcBAAF3ASMBAAFiARcBAAF+ATMBDgGwATcBFQHPAQEEAAHOAQEBAwE4AU8BjgEoAaAB/QEG
        AYYB/QEAAYcB/wEKAZEB/gGgAdQB+QGYAdIB+gEJAZEB/wEHAYwB/wEHAY0B/wEOAZcB/AEwATIBbQHP
        AQABAQYAAUwBAwFRAQkBBQG9AQwBCwGnAYIBgQHIAs0BwAFxAW8BzgIAAcACAAHBAW8BbQHPAs4BwQGJ
        AYgBywIOAaoBBQECAbUBRgEBAVUMAAE4AT4BAwE7AboBPgFgAf4BbwFpAf8BeAFYAfABZQEsAWMBEwHO
        AQgBAxIAAcABCQEEAakBUQEjAVABGAEDAVcBGAEAAWcBHwEAAWYBFAEAAYYBOwEqAfQB7AHmAfwB9wH0
        AZMBTgE4AWYBEgEAAWcBHgEAAVsBGwEAAU0BFQEBAZIBQgEaAb4BCwEFBgABhAERAS4BNwGXAd8BMgGp
        Af0BFAGRAfwBAAF7Af8BLAGfAfwBLwGkAfwBAAGAAf4BAAGCAf4BBgGUAf8BDgF4AdYBiwEIARsGAAGz
        AQACEAEIAZoCAAGQASIBHwGYAbwBugHBAsUBvQHOAc0BxQFvAW0BzQFtAWsDzgHGAcIBwwG7Ac8BywHQ
        ATYBLwGxAgABiAEKAQMBlAGwAQABEgYAATkBOgEBASgBrQEvAU8B6QFeAXgB7wGEAXkB8gGEAVgB9QFn
        AUoB5wFWAScBXgEOAc0BBgEBDwABtgEYAQwBfQE9ARoBMwELAQABRgEUAQABVAEYAQABVgEPAQABfQE5
        ASoB9AHsAeYB/QH3AfQBjgFMATgBXAEPAQABXAEaAQABTQEXAQABMwELAQABYAEqARABsAEYAQsGAAHH
        AQIBBgFBAUsBhAFCAa0B+QEzAZ4B8gEJAYoB9gG2Ad4B/gGwAdgB/QEAAW0B9gEAAYAB/gEKAZUB/wE3
        ATEBZwHLAQABAgYAAYIBAQEtAQoBBgGYAQEBAAFkAgABbwEtASoBjQHAAb8ByALUAc8C2AHUAtgC1AHT
        Ac8BwwHCAckBMwEvAZYCAAF6AQEBAAFjAQUBAgGHAX0BAAEvAwABPAE6AQYBKAGdAS8BUwHXAV8BiAHk
        AZEBjgHlAZYBnwHqAaUBcQHnAXwBSgHnAVkBPwHWAUwBIwFVAQoBzAEFAQEMAAGtAR8BEQFdASwBEQE2
        AQ0BAAFgASABBgF0ASoBCgF+AScBBgGbAUwBMAH2Ae4B6gH8AfgB9gGoAV8BQQGGASsBCAGGATIBEAF6
        ASwBDAFeAR4BBQFlASoBDQGmAR4BDgkAAYEBEQEuAUABlwHdATYBnwHwARMBiAHnAb4B4QH4AbMB2AH3
        AQABaAHvAQABiAH/AQwBegHWAY4BBgEUCQABZwECAT8BCQEFAYMBAQEAAVEBAgEAAXACAAGFASsBJwGi
        AtEB2QLhAd4C4AHeAtQB2gEwASwBpgIAAZEBAwEAAYUBAgEAAWkBBAEBAX0BYwEBAUEBTgE1AQUBXgGz
        AWYBbwHRAXkBnQHfAaMBmAHfAZ8BKgF9ASYBNAFvASEBmQHlAaABaQHbAXQBOQHYAUkBMQHCAT0BHwFL
        AQUBzAEECgABrQEeAREBmwFIAR0BigEzAREBnQFBARkBogFGAR8BnwE/ARYBrwFcATgB9wHvAewB+wH4
        AfcBtwFtAU0BoAE/ARYBowFIASIBoQFFAR4BmgE9ARcBpwFKARwBqwEfARAJAAHMAQEBAwFBAUwBhAFJ
        AasB8AEiAYwB4wHHAeIB9wHEAeQB+gEKAYwB9wEQAZgB/QE7ATABYwHRCwABaAECAUUBCQEEAZYBBAEA
        AXcBAgEAAY0CAAGbAXQBcwHOAe0B7AHuAvMB8ALzAfAD7gF3AXUB0AIAAaIBAgEAAZcBBAEAAYYBBgEB
        AZgBZAEBAUcBwgELAQIBTwGEAUQBtQHdAboBqQHaAa4BNAGKATMBowEoAQUBzgEEAQEBOQFtARkBpQHi
        AaoBYAHQAWoBKAHJATcBIgGwAS8BIAFCAQQBzAECBwABsAESAQ0BxAFmATMBpgFLASUBrAFSASwBsAFW
        ATABsQFWATABtgFcATYBtgFcATYBtgFcATYBtgFcATYBtgFcATYBtgFcATYBrwFVAS8BqQFPASoBuQFf
        ATEBrwETAQwMAAGKARABKQFBAZEB0wE4AZ4B6gHGAeIB9QG9AeMB/AEgAagB/wEmAYgB1wGWAQYBFQwA
        AYMBAQE4AQwBBgG3AQMBAAGUAQcBBgGhAYEBfwHTAv8B/gL/Af4B5gHlAe0B5AHjAewC/wH+Av8B/QGF
        AYIB1wEIAQcBqwEDAQABnAEIAQIBsAF9AQABOAMAAcIBDAEBAT8BhQE2AUMBjwFCAZ0BKQEDBgAByQEI
        AQEBNAFoARQBswHjAbcBVQHEAWABFQG3ASUBEwGjAiABQAEEAcwBAgQAAbsCBAHOAXEBRwHPAXQBTAHI
        AW4BSAHMAXMBTQHPAXUBTgHQAXcBUQHWAZYBewHYAZ4BhAHTAXwBVwHRAXUBTwHPAXYBUAHMAXIBTAHQ
        AXYBTgHKAW4BRgG4AgUMAAHLAQEBBAFHAUYBegFPAakB6QFLAakB6wFEAa4B+AE4AbIB/wFIATABXQ8A
        AbMBAAEVARwBEQHRAQkBBAHLASwBJgHDA/QD/wLoAe4BNwExAc0BMgEsAcwB5QHkAewD/wL2AfQBLgEo
        AcoBCAEEAdABFQENAcYBsAEAARYGAAHDAQwBAQGoASIBBAwAAcoBBwEBATEBYgEQAbQB3AG3AVEBsgFa
        AQYBngEUAQsBlQEXASoBSAEQAcYBBQEBAc8CAAG0ATcBJgH3AaQBdgHqAY0BaAHsAZABaQHtAY4BZgHp
        AZMBbgH7AfUB8wH8AfcB9QHtAZsBeQHvAY8BZgHtAZIBawHtAZEBawH4AaIBdQGzATgBJwHNEQABkwEN
        ASMBRgGWAdUBQwGsAfgBPAG0Af8BMwGQAdgBoQEEARESAAFcARIBfwEyASsB9QEfARgB3QFhAVsCzgHM
        Ad8BTwFKAdIBGAERAfABGAERAfEBSwFFAdIBzgHMAeABYgFdAdABHgEXAeMBLwEpAfQBVAEPAXseAAHK
        AQYBAAEzAWIBEwG2AdcBuQFSAZ8BWgE6AZkBQQFJAZMBUQFBATABAQMAAbwCAwHVAX0BWgH/Ab8BlwH/
        AasBiQH/AacBhAH8AaoBiAH+AdwBzwH9AeEB1gH8Aa8BkAH/AagBgwH/AawBiwH/AcABmgHWAX0BXAG4
        AgMSAAHSAgABTAFCAXYBWAG+Af8BTwG+Af4BUwEvAVsVAAG3AQEBFQFSAT0B0wFQAUoB/wE7ATUB8wE7
        ATUB2wE8ATcB+QFGAUAB/gFFAUAB/wFEAT4B+wFMAUQB3wE8ATYB9gFPAUoB/wFJATUBzAG0AQABFiEA
        AcoBBwEAATQBYgETAboB1wG9AVYBngFdAT4BNgEBCQABtQEJAQcB0gGFAWcB/wHUAbQB/wHQAbgB/wHH
        Aa4B/wHDAaoB/wHEAawB/wHHAa8B/wHSAbkB/wHUAbcB0wGIAWsBsAEIAQYYAAGdAQoBHgFKAaUB5wFE
        AZMB1AGpAQIBDRgAAaMBBAEqAWoBVAHZAXcBcwH/AW0BaQH/AW4BaQH/AWwBaAH/AWwBZwH/AW0BaQH/
        AXIBbgH/AXcBdAH/AWIBTAHTAaABAwEpJwABygEHAQABNwFfARMBRwFDAQwPAAG+AQYBBAGzAT4BMQHd
        AaoBkQH5AdQBvAH/AdwBxgH/Ad0BxgH6AdQBvQHfAasBlAG1AUIBNgG6AQQBAx4AAXYBNQFYAXsBLQFL
        HgABtQECARkBfAEzAZABkQGIAfMBtgG0Af8BngGbAf8BmgGXAf8BlwGVAf8BhAF9AfEBdQEuAY0BsgEB
        ARotAAHQAQIWAAHPAgABuwEGAQQBrwEYARQBsQEsAScBsQEtAScBrwEZARUBugEGAQUBzyMAAawBEgEg
        AbABEQEcJAABswEDAR0BlwEXAU4BiwEmAW4BiQElAW4BkQESAU4BsgECAR0/AAFCAU0BPgcAAT4DAAEo
        AwABQAMAASADAAEBAQABAQYAAQEWAAP/AQAB/wGHAf4BDwQAAf8BAwHAAQ8EAAH+AQEBwAEPBAAB/AEA
        AcABAQQAAfwBAAGABQAB/CAAAQEBgAYAAQMHAAEDAQABAQUAAQMBAAEDBQABAwGAAQMFAAEDAfABAwUA
        AQMB8AEHBAAB8AEPAgAB+AEfAv8B4AEHAgAB4AEHAf0B/wHAAQMCAAHAAQMB+AH/AYABAQIAAYABAQHw
        AX8CAAGAAQEBgAEBAeABPwIAAcABAwIAAcABHwIAAcABAwIAAYABDwIAAeABBwMAAQcCAAHgAQcDAAED
        AgAB8AEPAgABhgEBAgAB8AEfAgABzwMAAfgBHwGAAQEB/wKAAQEB+AE/AYABAQH/AcEBwAEDAfwBPwHA
        AQMB/wHjAeABBwH+AX8B4AEHAf8B9wHwAQ8B/gF/AfgBHwL/Cw==
</value>
  </data>
</root>